// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: session.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace scyna.proto {

  /// <summary>Holder for reflection information generated from session.proto</summary>
  public static partial class SessionReflection {

    #region Descriptor
    /// <summary>File descriptor for session.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SessionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1zZXNzaW9uLnByb3RvEgVzY3luYSLDAQoNQ29uZmlndXJhdGlvbhIPCgdO",
            "YXRzVXJsGAEgASgJEhQKDE5hdHNVc2VybmFtZRgCIAEoCRIUCgxOYXRzUGFz",
            "c3dvcmQYAyABKAkSDgoGREJIb3N0GAQgASgJEhIKCkRCVXNlcm5hbWUYBSAB",
            "KAkSEgoKREJQYXNzd29yZBgGIAEoCRISCgpEQkxvY2F0aW9uGAcgASgJEhEK",
            "CURCUGVtRmlsZRgIIAEoCRIWCg5pc0FXU0tleXNwYWNlcxgJIAEoCCI2ChRD",
            "cmVhdGVTZXNzaW9uUmVxdWVzdBIOCgZNb2R1bGUYASABKAkSDgoGU2VjcmV0",
            "GAIgASgJIlAKFUNyZWF0ZVNlc3Npb25SZXNwb25zZRIRCglTZXNzaW9uSUQY",
            "ASABKAQSJAoGQ29uZmlnGAUgASgLMhQuc2N5bmEuQ29uZmlndXJhdGlvbiI8",
            "ChBFbmRTZXNzaW9uU2lnbmFsEgoKAklEGAEgASgEEgwKBENvZGUYAiABKAkS",
            "DgoGTW9kdWxlGAMgASgJIjEKE1VwZGF0ZVNlc3Npb25TaWduYWwSCgoCSUQY",
            "ASABKAQSDgoGTW9kdWxlGAIgASgJQi8KC3NjeW5hLnByb3RvSAJQAVoOLi87",
            "c2N5bmFfcHJvdG+qAgtzY3luYS5wcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::scyna.proto.Configuration), global::scyna.proto.Configuration.Parser, new[]{ "NatsUrl", "NatsUsername", "NatsPassword", "DBHost", "DBUsername", "DBPassword", "DBLocation", "DBPemFile", "IsAWSKeyspaces" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::scyna.proto.CreateSessionRequest), global::scyna.proto.CreateSessionRequest.Parser, new[]{ "Module", "Secret" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::scyna.proto.CreateSessionResponse), global::scyna.proto.CreateSessionResponse.Parser, new[]{ "SessionID", "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::scyna.proto.EndSessionSignal), global::scyna.proto.EndSessionSignal.Parser, new[]{ "ID", "Code", "Module" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::scyna.proto.UpdateSessionSignal), global::scyna.proto.UpdateSessionSignal.Parser, new[]{ "ID", "Module" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Configuration : pb::IMessage<Configuration> {
    private static readonly pb::MessageParser<Configuration> _parser = new pb::MessageParser<Configuration>(() => new Configuration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Configuration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::scyna.proto.SessionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Configuration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Configuration(Configuration other) : this() {
      natsUrl_ = other.natsUrl_;
      natsUsername_ = other.natsUsername_;
      natsPassword_ = other.natsPassword_;
      dBHost_ = other.dBHost_;
      dBUsername_ = other.dBUsername_;
      dBPassword_ = other.dBPassword_;
      dBLocation_ = other.dBLocation_;
      dBPemFile_ = other.dBPemFile_;
      isAWSKeyspaces_ = other.isAWSKeyspaces_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Configuration Clone() {
      return new Configuration(this);
    }

    /// <summary>Field number for the "NatsUrl" field.</summary>
    public const int NatsUrlFieldNumber = 1;
    private string natsUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NatsUrl {
      get { return natsUrl_; }
      set {
        natsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NatsUsername" field.</summary>
    public const int NatsUsernameFieldNumber = 2;
    private string natsUsername_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NatsUsername {
      get { return natsUsername_; }
      set {
        natsUsername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NatsPassword" field.</summary>
    public const int NatsPasswordFieldNumber = 3;
    private string natsPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NatsPassword {
      get { return natsPassword_; }
      set {
        natsPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DBHost" field.</summary>
    public const int DBHostFieldNumber = 4;
    private string dBHost_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DBHost {
      get { return dBHost_; }
      set {
        dBHost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DBUsername" field.</summary>
    public const int DBUsernameFieldNumber = 5;
    private string dBUsername_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DBUsername {
      get { return dBUsername_; }
      set {
        dBUsername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DBPassword" field.</summary>
    public const int DBPasswordFieldNumber = 6;
    private string dBPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DBPassword {
      get { return dBPassword_; }
      set {
        dBPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DBLocation" field.</summary>
    public const int DBLocationFieldNumber = 7;
    private string dBLocation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DBLocation {
      get { return dBLocation_; }
      set {
        dBLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DBPemFile" field.</summary>
    public const int DBPemFileFieldNumber = 8;
    private string dBPemFile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DBPemFile {
      get { return dBPemFile_; }
      set {
        dBPemFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isAWSKeyspaces" field.</summary>
    public const int IsAWSKeyspacesFieldNumber = 9;
    private bool isAWSKeyspaces_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAWSKeyspaces {
      get { return isAWSKeyspaces_; }
      set {
        isAWSKeyspaces_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Configuration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Configuration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NatsUrl != other.NatsUrl) return false;
      if (NatsUsername != other.NatsUsername) return false;
      if (NatsPassword != other.NatsPassword) return false;
      if (DBHost != other.DBHost) return false;
      if (DBUsername != other.DBUsername) return false;
      if (DBPassword != other.DBPassword) return false;
      if (DBLocation != other.DBLocation) return false;
      if (DBPemFile != other.DBPemFile) return false;
      if (IsAWSKeyspaces != other.IsAWSKeyspaces) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NatsUrl.Length != 0) hash ^= NatsUrl.GetHashCode();
      if (NatsUsername.Length != 0) hash ^= NatsUsername.GetHashCode();
      if (NatsPassword.Length != 0) hash ^= NatsPassword.GetHashCode();
      if (DBHost.Length != 0) hash ^= DBHost.GetHashCode();
      if (DBUsername.Length != 0) hash ^= DBUsername.GetHashCode();
      if (DBPassword.Length != 0) hash ^= DBPassword.GetHashCode();
      if (DBLocation.Length != 0) hash ^= DBLocation.GetHashCode();
      if (DBPemFile.Length != 0) hash ^= DBPemFile.GetHashCode();
      if (IsAWSKeyspaces != false) hash ^= IsAWSKeyspaces.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NatsUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NatsUrl);
      }
      if (NatsUsername.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NatsUsername);
      }
      if (NatsPassword.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NatsPassword);
      }
      if (DBHost.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DBHost);
      }
      if (DBUsername.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DBUsername);
      }
      if (DBPassword.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DBPassword);
      }
      if (DBLocation.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DBLocation);
      }
      if (DBPemFile.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DBPemFile);
      }
      if (IsAWSKeyspaces != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsAWSKeyspaces);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NatsUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NatsUrl);
      }
      if (NatsUsername.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NatsUsername);
      }
      if (NatsPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NatsPassword);
      }
      if (DBHost.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DBHost);
      }
      if (DBUsername.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DBUsername);
      }
      if (DBPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DBPassword);
      }
      if (DBLocation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DBLocation);
      }
      if (DBPemFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DBPemFile);
      }
      if (IsAWSKeyspaces != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Configuration other) {
      if (other == null) {
        return;
      }
      if (other.NatsUrl.Length != 0) {
        NatsUrl = other.NatsUrl;
      }
      if (other.NatsUsername.Length != 0) {
        NatsUsername = other.NatsUsername;
      }
      if (other.NatsPassword.Length != 0) {
        NatsPassword = other.NatsPassword;
      }
      if (other.DBHost.Length != 0) {
        DBHost = other.DBHost;
      }
      if (other.DBUsername.Length != 0) {
        DBUsername = other.DBUsername;
      }
      if (other.DBPassword.Length != 0) {
        DBPassword = other.DBPassword;
      }
      if (other.DBLocation.Length != 0) {
        DBLocation = other.DBLocation;
      }
      if (other.DBPemFile.Length != 0) {
        DBPemFile = other.DBPemFile;
      }
      if (other.IsAWSKeyspaces != false) {
        IsAWSKeyspaces = other.IsAWSKeyspaces;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NatsUrl = input.ReadString();
            break;
          }
          case 18: {
            NatsUsername = input.ReadString();
            break;
          }
          case 26: {
            NatsPassword = input.ReadString();
            break;
          }
          case 34: {
            DBHost = input.ReadString();
            break;
          }
          case 42: {
            DBUsername = input.ReadString();
            break;
          }
          case 50: {
            DBPassword = input.ReadString();
            break;
          }
          case 58: {
            DBLocation = input.ReadString();
            break;
          }
          case 66: {
            DBPemFile = input.ReadString();
            break;
          }
          case 72: {
            IsAWSKeyspaces = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///session
  /// </summary>
  public sealed partial class CreateSessionRequest : pb::IMessage<CreateSessionRequest> {
    private static readonly pb::MessageParser<CreateSessionRequest> _parser = new pb::MessageParser<CreateSessionRequest>(() => new CreateSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::scyna.proto.SessionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSessionRequest(CreateSessionRequest other) : this() {
      module_ = other.module_;
      secret_ = other.secret_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSessionRequest Clone() {
      return new CreateSessionRequest(this);
    }

    /// <summary>Field number for the "Module" field.</summary>
    public const int ModuleFieldNumber = 1;
    private string module_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Module {
      get { return module_; }
      set {
        module_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Secret" field.</summary>
    public const int SecretFieldNumber = 2;
    private string secret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Secret {
      get { return secret_; }
      set {
        secret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Module != other.Module) return false;
      if (Secret != other.Secret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Module.Length != 0) hash ^= Module.GetHashCode();
      if (Secret.Length != 0) hash ^= Secret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Module.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Module);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Secret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Module.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Module);
      }
      if (Secret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Secret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Module.Length != 0) {
        Module = other.Module;
      }
      if (other.Secret.Length != 0) {
        Secret = other.Secret;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Module = input.ReadString();
            break;
          }
          case 18: {
            Secret = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateSessionResponse : pb::IMessage<CreateSessionResponse> {
    private static readonly pb::MessageParser<CreateSessionResponse> _parser = new pb::MessageParser<CreateSessionResponse>(() => new CreateSessionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateSessionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::scyna.proto.SessionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSessionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSessionResponse(CreateSessionResponse other) : this() {
      sessionID_ = other.sessionID_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSessionResponse Clone() {
      return new CreateSessionResponse(this);
    }

    /// <summary>Field number for the "SessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private ulong sessionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = value;
      }
    }

    /// <summary>Field number for the "Config" field.</summary>
    public const int ConfigFieldNumber = 5;
    private global::scyna.proto.Configuration config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::scyna.proto.Configuration Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateSessionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateSessionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID != 0UL) hash ^= SessionID.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(SessionID);
      }
      if (config_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SessionID);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateSessionResponse other) {
      if (other == null) {
        return;
      }
      if (other.SessionID != 0UL) {
        SessionID = other.SessionID;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          config_ = new global::scyna.proto.Configuration();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SessionID = input.ReadUInt64();
            break;
          }
          case 42: {
            if (config_ == null) {
              config_ = new global::scyna.proto.Configuration();
            }
            input.ReadMessage(config_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EndSessionSignal : pb::IMessage<EndSessionSignal> {
    private static readonly pb::MessageParser<EndSessionSignal> _parser = new pb::MessageParser<EndSessionSignal>(() => new EndSessionSignal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndSessionSignal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::scyna.proto.SessionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndSessionSignal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndSessionSignal(EndSessionSignal other) : this() {
      iD_ = other.iD_;
      code_ = other.code_;
      module_ = other.module_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndSessionSignal Clone() {
      return new EndSessionSignal(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private ulong iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 2;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Module" field.</summary>
    public const int ModuleFieldNumber = 3;
    private string module_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Module {
      get { return module_; }
      set {
        module_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndSessionSignal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndSessionSignal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (Code != other.Code) return false;
      if (Module != other.Module) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0UL) hash ^= ID.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Module.Length != 0) hash ^= Module.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ID);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (Module.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Module);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ID);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Module.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Module);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndSessionSignal other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0UL) {
        ID = other.ID;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Module.Length != 0) {
        Module = other.Module;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadUInt64();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 26: {
            Module = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateSessionSignal : pb::IMessage<UpdateSessionSignal> {
    private static readonly pb::MessageParser<UpdateSessionSignal> _parser = new pb::MessageParser<UpdateSessionSignal>(() => new UpdateSessionSignal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateSessionSignal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::scyna.proto.SessionReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSessionSignal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSessionSignal(UpdateSessionSignal other) : this() {
      iD_ = other.iD_;
      module_ = other.module_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSessionSignal Clone() {
      return new UpdateSessionSignal(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private ulong iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "Module" field.</summary>
    public const int ModuleFieldNumber = 2;
    private string module_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Module {
      get { return module_; }
      set {
        module_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateSessionSignal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateSessionSignal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (Module != other.Module) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0UL) hash ^= ID.GetHashCode();
      if (Module.Length != 0) hash ^= Module.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ID);
      }
      if (Module.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Module);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ID);
      }
      if (Module.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Module);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateSessionSignal other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0UL) {
        ID = other.ID;
      }
      if (other.Module.Length != 0) {
        Module = other.Module;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadUInt64();
            break;
          }
          case 18: {
            Module = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
